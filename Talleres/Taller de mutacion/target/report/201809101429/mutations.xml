<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><killingTest>org.autotest.TestStackAr.fullPush(org.autotest.TestStackAr)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><killingTest>org.autotest.TestStackAr.testHashCode(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><killingTest>org.autotest.TestStackAr.equals(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>org.autotest.TestStackAr.emptyPop(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><killingTest>org.autotest.TestStackAr.emptyPop(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>isFull</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><killingTest>org.autotest.TestStackAr.fullPush(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>isFull</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>org.autotest.TestStackAr.fullPush(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>pop</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>pop</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>org.autotest.TestStackAr.push(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>pop</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>29</index><killingTest>org.autotest.TestStackAr.push(org.autotest.TestStackAr)</killingTest><description>mutated return of Object value for org/autotest/StackAr::pop to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>push</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><killingTest>org.autotest.TestStackAr.size(org.autotest.TestStackAr)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>push</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>org.autotest.TestStackAr.fullPush(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><killingTest>org.autotest.TestStackAr.emptyPop(org.autotest.TestStackAr)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>size</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><killingTest>org.autotest.TestStackAr.emptyPop(org.autotest.TestStackAr)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><killingTest>org.autotest.TestStackAr.testToString(org.autotest.TestStackAr)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><killingTest>org.autotest.TestStackAr.testToString(org.autotest.TestStackAr)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><killingTest>org.autotest.TestStackAr.testToString(org.autotest.TestStackAr)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><killingTest>org.autotest.TestStackAr.testToString(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><killingTest>org.autotest.TestStackAr.testToString(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><killingTest>org.autotest.TestStackAr.testToString(org.autotest.TestStackAr)</killingTest><description>mutated return of Object value for org/autotest/StackAr::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>top</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><killingTest>org.autotest.TestStackAr.emptyTop(org.autotest.TestStackAr)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>StackAr.java</sourceFile><mutatedClass>org.autotest.StackAr</mutatedClass><mutatedMethod>top</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><killingTest>org.autotest.TestStackAr.top(org.autotest.TestStackAr)</killingTest><description>mutated return of Object value for org/autotest/StackAr::top to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
